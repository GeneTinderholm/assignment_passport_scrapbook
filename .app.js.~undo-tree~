"90a22e4dffcf0bddee6354b207f81f6853b726bf"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#18=[nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("  }
" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 4 (fontified t)) . 1833) (undo-tree-id652 . -2) (undo-tree-id653 . -2)) ((1833 . 1837) (t 23088 9521 437041 15000)) (23088 9551 815842 14000) -1 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((1974 . 1975) (#("q" 0 1 (fontified t)) . 1974)) ((1974 . 1975) (#("s" 0 1 (fontified t)) . 1974) (t 23088 9020 829641 8000)) (23088 9020 797090 865000) 0 nil]) ((1852 . 1853) (#("q" 0 1 (fontified t)) . 1852)) ((1852 . 1853) (#("s" 0 1 (fontified t)) . 1852)) (23088 9095 540758 592000) 0 nil]) ((1727 . 1728) (#("q" 0 1 (fontified t)) . 1727)) ((1727 . 1728) (#("s" 0 1 (fontified t)) . 1727)) (23088 9095 892702 671000) 0 nil]) ((1595 . 1596) (#("q" 0 1 (fontified t)) . 1595)) ((1595 . 1596) (#("s" 0 1 (fontified t)) . 1595)) (23088 9096 230916 58000) 0 nil]) ((1518 . 1519) (#("q" 0 1 (fontified t)) . 1518)) ((1518 . 1519) (#("s" 0 1 (fontified t)) . 1518)) (23088 9096 600046 849000) 0 nil]) ((1485 . 1486) (#("q" 0 1 (fontified t)) . 1485)) ((1485 . 1486) (#("s" 0 1 (fontified t)) . 1485)) (23088 9096 948651 252000) 0 nil]) ((1427 . 1428) (#("q" 0 1 (fontified t)) . 1427) (t 23088 8891 377699 255000)) ((1427 . 1428) (#("s" 0 1 (fontified t)) . 1427)) (23088 9098 110867 110000) 0 nil]) ((1423 . 1476) (#("    req.session.passport = req.session.passport || {};
" 0 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-3-face)) 52 53 (fontified t face (rainbow-delimiters-depth-3-face)) 53 55 (fontified t)) . 1423) (undo-tree-id515 . -55) (undo-tree-id516 . -55) (undo-tree-id517 . -54)) ((1423 . 1478) (#("  req.session.passport = req.session.passport || {};
" 0 4 (fontified t) 4 5 (fontified t) 5 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-3-face)) 50 51 (fontified t face (rainbow-delimiters-depth-3-face)) 51 53 (fontified t)) . 1423) (undo-tree-id518 . -53) (undo-tree-id519 . -53) (t 23088 9108 175326 628000)) (23088 9105 336655 483000) 0 nil]) ((1423 . 1478) 1427) ((#("    req.session.passport = req.session.passport || {};
" 0 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-3-face)) 52 53 (fontified t face (rainbow-delimiters-depth-3-face)) 53 55 (fontified t)) . 1423) (undo-tree-id520 . -55) (undo-tree-id521 . -55) (undo-tree-id522 . -54)) (23088 9491 415494 694000) 0 nil]) ((#("    req.session.passport = req.session.passport || {};
" 0 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-4-face)) 52 53 (fontified t face (rainbow-delimiters-depth-4-face)) 53 55 (fontified t)) . 1459) (undo-tree-id508 . -39) (undo-tree-id509 . -55) (undo-tree-id510 . -55) (undo-tree-id511 . -39) 1498 (t 23088 8739 449211 296000)) ((1459 . 1514)) (23088 9492 93423 330000) 0 nil]) ((1589 . 1663) (#("  if (req.session.passport.user === \"toLogin\" && req.path === '/login') {
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 36 (fontified t) 36 45 (fontified t face font-lock-string-face) 45 62 (fontified t) 62 70 (fontified t face font-lock-string-face) 70 71 (fontified t face (rainbow-delimiters-depth-3-face)) 71 72 (fontified t) 72 73 (fontified t face (rainbow-delimiters-depth-3-face)) 73 74 (fontified t)) . 1589) (undo-tree-id488 . 4) (undo-tree-id489 . -45) (undo-tree-id490 . -74) (undo-tree-id491 . -74) (undo-tree-id493 . 5) (undo-tree-id494 . -69) (undo-tree-id495 . -69) (undo-tree-id497 . -74)) ((1589 . 1663) (#("  if (req.session.passport.user === \"toLogin\" && req.path === \"/login\") {
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 8 (fontified t) 8 9 (fontified t) 9 36 (fontified t) 36 45 (fontified t face font-lock-string-face) 45 62 (fontified t) 62 70 (fontified t face font-lock-string-face) 70 71 (fontified t face (rainbow-delimiters-depth-3-face)) 71 72 (fontified t) 72 73 (fontified t face (rainbow-delimiters-depth-3-face)) 73 74 (fontified t)) . 1589) (undo-tree-id523 . -74) (undo-tree-id524 . -74)) (23088 9492 497630 440000) 0 nil]) ((#("'" 0 1 (fontified nil face font-lock-string-face)) . 1659) (1655 . 1659) (1652 . 1655) (1651 . 1653) (#("'" 0 1 (fontified nil)) . -1651) (1634 . 1652) (t 23088 8551 887498 957000)) ((#(" && req.path === '" 0 17 (fontified nil) 17 18 (fontified nil)) . 1634) (1651 . 1652) (#("''" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1651) (#("/lo" 0 3 (fontified nil face font-lock-string-face)) . 1652) (#("gin'" 0 4 (fontified nil face font-lock-string-face)) . 1655) (1659 . 1660)) (23088 9492 734112 778000) 0 nil]) ((1945 . 2020) (#("      req.session.redirect.user = 'toLogin';
      res.redirect(\"/login\");
    }
" 0 34 (fontified t) 34 43 (fontified t face font-lock-string-face) 43 44 (fontified t) 44 45 (fontified t) 45 63 (fontified t) 63 64 (fontified t face (rainbow-delimiters-depth-4-face)) 64 72 (fontified t face font-lock-string-face) 72 73 (fontified t face (rainbow-delimiters-depth-4-face)) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 79 (fontified t) 79 80 (fontified t face (rainbow-delimiters-depth-3-face)) 80 81 (fontified t)) . 1945) (undo-tree-id451 . 37) (undo-tree-id452 . -45) (undo-tree-id453 . -45) (undo-tree-id454 . -75) (undo-tree-id455 . -75) (undo-tree-id456 . -81) (undo-tree-id457 . -81) (undo-tree-id458 . -81) (undo-tree-id459 . -81) (undo-tree-id461 . -81) (1821 . 1866) (#("	req.session.passport.user = 'toLogin';
" 0 29 (fontified t) 29 38 (fontified t face font-lock-string-face) 38 39 (fontified t) 39 40 (fontified t)) . 1821) (undo-tree-id462 . -40) (undo-tree-id463 . -40) (1423 . 1654) (#("    if(!req.session.passport.user){
	req.session.passport = req.session.passport || {};
	req.session.passport.user = 'toLogin';
	res.redirect('/login');
    }
    if(req.session.passport.user === 'toLogin'){
	next();
    }
" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-3-face)) 34 35 (fontified t face (rainbow-delimiters-depth-3-face)) 35 36 (fontified t) 36 84 (fontified t) 84 85 (fontified t face (rainbow-delimiters-depth-4-face)) 85 86 (fontified t face (rainbow-delimiters-depth-4-face)) 86 87 (fontified t) 87 88 (fontified t) 88 117 (fontified t) 117 126 (fontified t face font-lock-string-face) 126 127 (fontified t) 127 128 (fontified t) 128 141 (fontified t) 141 142 (fontified t face (rainbow-delimiters-depth-4-face)) 142 150 (fontified t face font-lock-string-face) 150 151 (fontified t face (rainbow-delimiters-depth-4-face)) 151 152 (fontified t) 152 153 (fontified t) 153 157 (fontified t) 157 158 (fontified t face (rainbow-delimiters-depth-3-face)) 158 159 (fontified t) 159 163 (fontified t) 163 165 (fontified t face font-lock-keyword-face) 165 166 (fontified t face (rainbow-delimiters-depth-3-face)) 166 196 (fontified t) 196 205 (fontified t face font-lock-string-face) 205 206 (fontified t face (rainbow-delimiters-depth-3-face)) 206 207 (fontified t face (rainbow-delimiters-depth-3-face)) 207 208 (fontified t) 208 213 (fontified t) 213 214 (fontified t face (rainbow-delimiters-depth-4-face)) 214 215 (fontified t face (rainbow-delimiters-depth-4-face)) 215 216 (fontified t) 216 217 (fontified t) 217 221 (fontified t) 221 222 (fontified t face (rainbow-delimiters-depth-3-face)) 222 223 (fontified t)) . 1423) (undo-tree-id465 . -36) (undo-tree-id466 . -36) (undo-tree-id467 . -208) (undo-tree-id468 . -208) (undo-tree-id469 . -159) (undo-tree-id470 . -159) (undo-tree-id471 . -153) (undo-tree-id472 . -153) (undo-tree-id473 . -217) (undo-tree-id474 . -217) (undo-tree-id475 . -223) (undo-tree-id476 . -223) (undo-tree-id477 . -128) (undo-tree-id478 . -128) (undo-tree-id479 . -88) (undo-tree-id480 . -88) (undo-tree-id481 . -223)) ((1423 . 1646) (#("  if (!req.session.passport.user) {
    req.session.passport = req.session.passport || {};
    req.session.passport.user = \"toLogin\";
    res.redirect(\"/login\");
  }
  if (req.session.passport.user === \"toLogin\") {
    next();
  }
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 9 (fontified t) 9 10 (fontified t) 10 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-3-face)) 33 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-3-face)) 35 36 (fontified t) 36 87 (fontified t) 87 88 (fontified t face (rainbow-delimiters-depth-4-face)) 88 89 (fontified t face (rainbow-delimiters-depth-4-face)) 89 91 (fontified t) 91 97 (fontified t) 97 98 (fontified t) 98 123 (fontified t) 123 132 (fontified t face font-lock-string-face) 132 133 (fontified t) 133 134 (fontified t) 134 150 (fontified t) 150 151 (fontified t face (rainbow-delimiters-depth-4-face)) 151 159 (fontified t face font-lock-string-face) 159 160 (fontified t face (rainbow-delimiters-depth-4-face)) 160 164 (fontified t) 164 165 (fontified t face (rainbow-delimiters-depth-3-face)) 165 166 (fontified t) 166 168 (fontified t) 168 170 (fontified t face font-lock-keyword-face) 170 171 (fontified t) 171 172 (fontified t face (rainbow-delimiters-depth-3-face)) 172 202 (fontified t) 202 211 (fontified t face font-lock-string-face) 211 212 (fontified t face (rainbow-delimiters-depth-3-face)) 212 213 (fontified t) 213 214 (fontified t face (rainbow-delimiters-depth-3-face)) 214 215 (fontified t) 215 223 (fontified t) 223 224 (fontified t face (rainbow-delimiters-depth-4-face)) 224 225 (fontified t face (rainbow-delimiters-depth-4-face)) 225 227 (fontified t) 227 229 (fontified t) 229 230 (fontified t face (rainbow-delimiters-depth-3-face)) 230 231 (fontified t)) . 1423) (undo-tree-id525 . -36) (undo-tree-id526 . -36) (undo-tree-id527 . -215) (undo-tree-id528 . -215) (undo-tree-id529 . -91) (undo-tree-id530 . -91) (undo-tree-id531 . -227) (undo-tree-id532 . -227) (undo-tree-id533 . 20) (undo-tree-id534 . -162) (undo-tree-id535 . -162) (undo-tree-id536 . -134) (undo-tree-id537 . -134) (undo-tree-id538 . -231) (undo-tree-id539 . -231) (undo-tree-id540 . -166) (undo-tree-id541 . -166) (undo-tree-id542 . -36) (undo-tree-id543 . -4) (undo-tree-id544 . -211) (undo-tree-id545 . 20) (undo-tree-id546 . -212) (undo-tree-id547 . 60) (undo-tree-id548 . -172) (1821 . 1861) (#("      req.session.passport.user = \"toLogin\";
" 0 8 (fontified t) 8 9 (fontified t) 9 34 (fontified t) 34 43 (fontified t face font-lock-string-face) 43 45 (fontified t)) . 1821) (undo-tree-id549 . 45) (undo-tree-id550 . -45) (undo-tree-id551 . -45) (1945 . 2026) (#("    req.session.redirect.user = \"toLogin\";
    res.redirect(\"/login\");
  }
" 0 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 32 (fontified t) 32 41 (fontified t face font-lock-string-face) 41 43 (fontified t) 43 44 (fontified t) 44 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-4-face) fontified t) 60 68 (face font-lock-string-face fontified t) 68 69 (face (rainbow-delimiters-depth-4-face) fontified t) 69 71 (fontified t) 71 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-3-face)) 74 75 (fontified t)) . 1945) (undo-tree-id552 . -43) (undo-tree-id553 . -43) (undo-tree-id554 . -75) (undo-tree-id555 . -75) (undo-tree-id556 . -71) (undo-tree-id557 . -71)) (23088 9492 932399 108000) 0 nil]) ((#("  }
" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 4 (fontified t)) . 2013) (undo-tree-id483 . -4) (undo-tree-id484 . -4) (undo-tree-id485 . -2) (undo-tree-id486 . 2) (undo-tree-id487 . -3) 2015 (t 23088 8536 624282 561000)) ((2013 . 2017)) (23088 9493 167242 208000) 0 nil]) ((1975 . 1976) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1975) (1967 . 1975) (1966 . 1968) (#("'" 0 1 (fontified nil)) . -1966) (1959 . 1967) (#("l" 0 1 (fontified t)) . -1959) (undo-tree-id424 . -1) (#("o" 0 1 (fontified t)) . -1960) (undo-tree-id425 . -1) (#("g" 0 1 (fontified t)) . -1961) (undo-tree-id426 . -1) 1962 (1959 . 1962) (1938 . 1959) (1932 . 1938) (1932 . 1933) 1936) ((#("
" 0 1 (fontified nil)) . 1932) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#("      " 0 6 (fontified nil)) . 1932) (#("req.session.redirect." 0 21 (fontified nil)) . 1938) (#("log" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 1959) (1959 . 1962) (#("user = '" 0 7 (fontified nil) 7 8 (fontified nil)) . 1959) (1966 . 1967) (#("''" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1966) (#("toLogin'" 0 8 (fontified nil face font-lock-string-face)) . 1967) (1975 . 1976) (#(";" 0 1 (fontified t)) . 1975)) (23088 9493 712933 28000) 0 nil]) ((#("      next();
" 0 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-4-face)) 11 12 (fontified t face (rainbow-delimiters-depth-4-face)) 12 13 (fontified t) 13 14 (fontified t)) . 1962) (undo-tree-id427 . -14) (undo-tree-id428 . -14) (undo-tree-id429 . -6) 1968) ((1962 . 1976)) (23088 9494 103482 721000) 0 nil]) ((#("    } else {
" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face)) 5 6 (fontified t) 6 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-3-face)) 12 13 (fontified t)) . 1962) (undo-tree-id430 . -13) (undo-tree-id431 . -13) (undo-tree-id432 . -11) (undo-tree-id433 . 2) (undo-tree-id434 . -12) 1973) ((1962 . 1975)) (23088 9494 300348 939000) 0 nil]) ((1851 . 1852) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1851) (1843 . 1851) (1842 . 1844) (#("'" 0 1 (fontified nil)) . -1842) (1839 . 1843) (#(" " 0 1 (fontified t)) . -1839) (undo-tree-id435 . -1) 1840 (1838 . 1840) (1835 . 1838) (1814 . 1835) (1812 . 1814) 1809) ((#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 1812) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (#("req.session.passport." 0 21 (fontified nil)) . 1814) (#("use" 0 3 (fontified nil)) . 1835) (#("r " 0 1 (fontified nil) 1 2 (fontified nil)) . 1838) (1839 . 1840) (#(" = '" 0 3 (fontified nil) 3 4 (fontified nil)) . 1839) (1842 . 1843) (#("''" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1842) (#("toLogin'" 0 8 (fontified nil face font-lock-string-face)) . 1843) (1851 . 1852) (#(";" 0 1 (fontified t)) . 1851)) (23088 9494 485258 334000) 0 nil]) ((#(" && req.path != \"/login\"" 0 16 (fontified t) 16 24 (fontified t face font-lock-string-face)) . 1809) (undo-tree-id436 . -23) (undo-tree-id437 . -23) (undo-tree-id438 . -23) (undo-tree-id439 . -23) 1832) ((1809 . 1833)) (23088 9494 644487 970000) 0 nil]) ((1748 . 1751) 1791) ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1748)) (23088 9494 818112 231000) 0 nil]) ((1701 . 1719) (1694 . 1701) (#("userId" 0 6 (fontified t)) . 1694)) ((1694 . 1700) (#("req.ses" 0 2 (fontified nil) 2 3 (fontified nil) 3 7 (fontified nil)) . 1694) (#("sion.passport.user" 0 18 (fontified t)) . 1701)) (23088 9494 988867 633000) 0 nil]) ((#("  req.session.passport = req.session.passport || {};
    const userId = req.session.passport.user;
" 0 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-3-face)) 50 51 (fontified t face (rainbow-delimiters-depth-3-face)) 51 52 (fontified t) 52 53 (fontified t) 53 57 (fontified t) 57 62 (fontified t face font-lock-keyword-face) 62 63 (fontified t) 63 69 (fontified t face font-lock-variable-name-face) 69 98 (fontified t) 98 99 (fontified t)) . 1646) (undo-tree-id440 . -99) (undo-tree-id441 . -99) (undo-tree-id442 . -53) (undo-tree-id443 . -53) (undo-tree-id444 . -97) (undo-tree-id445 . -44) (undo-tree-id446 . -97) (undo-tree-id447 . -97) (undo-tree-id448 . -97) (undo-tree-id449 . -44) (undo-tree-id450 . -97) 1743) ((1646 . 1745)) (23088 9495 174038 556000) 0 nil] [nil nil ((#("  req.session.passport = req.session.passport || {};
    const userId = req.session.passport.user;
" 0 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-3-face)) 50 51 (fontified t face (rainbow-delimiters-depth-3-face)) 51 52 (fontified t) 52 53 (fontified t) 53 57 (fontified t) 57 62 (fontified t face font-lock-keyword-face) 62 63 (fontified t) 63 69 (fontified t face font-lock-variable-name-face) 69 98 (fontified t) 98 99 (fontified t)) . 1646) (undo-tree-id336 . -99) (undo-tree-id337 . -99) (undo-tree-id338 . -53) (undo-tree-id339 . -53) (undo-tree-id340 . -98) (undo-tree-id341 . -51) (undo-tree-id342 . -98) (undo-tree-id343 . -97) (undo-tree-id344 . -98) (undo-tree-id345 . -99) (undo-tree-id346 . -51) (undo-tree-id347 . -98) 1744) ((1646 . 1745)) (23088 8446 981006 951000) 0 nil]) ((1509 . 1510) (#("}" 0 1 (fontified nil face #1=(rainbow-delimiters-depth-4-face))) . 1509) (1508 . 1509) (1507 . 1509) (#("{" 0 1 (fontified nil)) . -1507) (1504 . 1508) (1503 . 1504) (#("." 0 1 (fontified t)) . -1503) (undo-tree-id348 . -1) 1504 (1501 . 1504) (1481 . 1501) (1460 . 1481) (1459 . 1460) (1459 . 1460) 1466) ((#("
" 0 1 (fontified nil)) . 1459) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (#("	" 0 1 (fontified nil)) . 1459) (#("req.session.passport " 0 21 (fontified nil)) . 1460) (#("= req.session.passpo" 0 20 (fontified nil)) . 1481) (#("rt." 0 2 (fontified nil) 2 3 (fontified nil)) . 1501) (1503 . 1504) (#(" " 0 1 (fontified nil)) . 1503) (#("|| {" 0 3 (fontified nil) 3 4 (fontified nil)) . 1504) (1507 . 1508) (#("{}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face)) 1 2 (fontified nil face #1#)) . 1507) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1508) (1509 . 1510) (#(";" 0 1 (fontified t)) . 1509)) (23088 9495 358854 720000) 0 nil]) ((1586 . 1587) (#(")" 0 1 (fontified nil face #2=(rainbow-delimiters-depth-4-face))) . 1586) (1585 . 1586) (1584 . 1586) (#("(" 0 1 (fontified nil)) . -1584) (undo-tree-id351 . -1) (1580 . 1585) (1579 . 1580) (1579 . 1580) 1582) ((#("
" 0 1 (fontified nil)) . 1579) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (#("	" 0 1 (fontified nil)) . 1579) (#("next(" 0 4 (fontified nil) 4 5 (fontified nil)) . 1580) (1584 . 1585) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face)) 1 2 (fontified nil face #2#)) . 1584) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1585) (1586 . 1587) (#(";" 0 1 (fontified t)) . 1586)) (23088 9495 504740 661000) 0 nil]) ((1578 . 1583) (1577 . 1579) (#("{" 0 1 (fontified nil face #8=(rainbow-delimiters-depth-3-face))) . -1577) (undo-tree-id353 . -1) (1576 . 1578) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1576) (1571 . 1576) (1568 . 1571) (1567 . 1569) (#("'" 0 1 (fontified nil)) . -1567) (1562 . 1568) (#(")" 0 1 (fontified t face #4=(rainbow-delimiters-depth-3-face))) . -1562) (undo-tree-id355 . -1) (undo-tree-id356 . 1) (undo-tree-id357 . -1) (#("{" 0 1 (fontified nil face #6=(rainbow-delimiters-depth-3-face))) . -1563) (undo-tree-id358 . -1) (#("}" 0 1 (fontified t face #7=(rainbow-delimiters-depth-3-face))) . 1564) (#("
" 0 1 (fontified t)) . -1564) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#(" " 0 1 (fontified t)) . -1565) (undo-tree-id362 . -1) (#(" " 0 1 (fontified t)) . -1566) (undo-tree-id363 . -1) (#(" " 0 1 (fontified t)) . -1567) (undo-tree-id364 . -1) (#(" " 0 1 (fontified t)) . -1568) (undo-tree-id365 . -1) 1569 (1564 . 1569) (1563 . 1565) (#("{" 0 1 (fontified nil face #5=(rainbow-delimiters-depth-3-face))) . -1563) (1563 . 1564) (#(")" 0 1 (fontified nil face #3=(rainbow-delimiters-depth-3-face))) . 1563) (1562 . 1563) (#(" " 0 1 (fontified nil)) . -1562) (1562 . 1563) (#(")" 0 1 (fontified nil)) . -1562) (1562 . 1563) (#(" " 0 1 (fontified t)) . -1562) (undo-tree-id366 . -1) 1563 (1549 . 1563) (1537 . 1549) (1536 . 1538) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1536) (1534 . 1537) (1529 . 1534) 1528) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 1529) (undo-tree-id566 . -5) (undo-tree-id567 . -5) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -5) (#("if(" 0 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face)) . 1534) (undo-tree-id571 . -2) (undo-tree-id572 . -2) (undo-tree-id573 . -2) (1536 . 1537) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face #3#)) . 1536) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (#("req.session." 0 12 (fontified nil)) . 1537) (undo-tree-id577 . -12) (undo-tree-id578 . -12) (undo-tree-id579 . -12) (#("passport.user " 0 13 (fontified nil) 13 14 (fontified nil)) . 1549) (undo-tree-id580 . -13) (undo-tree-id581 . -13) (undo-tree-id582 . -13) (1562 . 1563) (#(")" 0 1 (fontified nil)) . 1562) (1562 . 1563) (#(" " 0 1 (fontified nil)) . 1562) (1562 . 1563) (#(")" 0 1 (fontified nil face #4#)) . 1562) (1563 . 1564) (#("{" 0 1 (fontified nil face #5#)) . 1563) (1563 . 1564) (#("{}" 0 1 (fontified nil face #6#) 1 2 (fontified nil face #7#)) . 1563) (#("
    " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 1564) (1564 . 1569) (1562 . 1565) (#(" === '" 0 5 (fontified nil) 5 6 (fontified nil)) . 1562) (undo-tree-id583 . -5) (undo-tree-id584 . -5) (undo-tree-id585 . -5) (1567 . 1568) (#("''" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1567) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (#("toL" 0 3 (fontified nil face font-lock-string-face)) . 1568) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (#("ogin'" 0 5 (fontified nil face font-lock-string-face)) . 1571) (undo-tree-id592 . -5) (undo-tree-id593 . -5) (undo-tree-id594 . -5) (1576 . 1577) (#("){" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face #8#)) . 1576) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (1577 . 1578) (#("{}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1577) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 1578) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -4)) (23088 9495 676656 598000) 0 nil]) ((1497 . 1498) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1497) (1489 . 1497) (1488 . 1490) (#("'" 0 1 (fontified nil)) . -1488) (1484 . 1489) (1463 . 1484) (#("p" 0 1 (fontified t)) . -1463) (undo-tree-id368 . -1) 1464 (1460 . 1464) (1459 . 1460) (1459 . 1460) 1482) ((#("
" 0 1 (fontified nil)) . 1459) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (#("	" 0 1 (fontified nil)) . 1459) (#("reqp" 0 3 (fontified nil) 3 4 (fontified nil)) . 1460) (1463 . 1464) (#(".session.passport.use" 0 21 (fontified nil)) . 1463) (#("r = '" 0 4 (fontified nil) 4 5 (fontified nil)) . 1484) (1488 . 1489) (#("''" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1488) (#("toLogin'" 0 8 (fontified nil face font-lock-string-face)) . 1489) (1497 . 1498) (#(";" 0 1 (fontified t)) . 1497)) (23088 9495 849265 158000) 0 nil]) ((1482 . 1483) (#(")" 0 1 (fontified nil face #9=(rainbow-delimiters-depth-4-face))) . 1482) (1481 . 1482) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1481) (1474 . 1481) (1473 . 1475) (#("'" 0 1 (fontified nil face #10=(rainbow-delimiters-depth-4-face))) . 1473) (1473 . 1474) (1472 . 1474) (#("(" 0 1 (fontified nil)) . 1472) (1460 . 1473) (#("redirect" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1460) (1459 . 1468) (1459 . 1460)) ((#("
" 0 1 (fontified nil)) . 1459) (#("	redirect" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 1459) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (1460 . 1468) (#("res.redirect(" 0 12 (fontified nil) 12 13 (fontified nil)) . 1460) (undo-tree-id656 . -12) (undo-tree-id657 . -12) (1472 . 1473) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face)) 1 2 (fontified nil face #9#)) . 1472) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (#("'" 0 1 (fontified nil face #10#)) . 1473) (1473 . 1474) (#("''" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1473) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (#("/login'" 0 7 (fontified nil face font-lock-string-face)) . 1474) (undo-tree-id662 . -7) (undo-tree-id663 . -7) (1481 . 1482) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1481) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (1482 . 1483) (#(";" 0 1 (fontified t)) . 1482)) (23088 9558 632746 693000) 0 nil]) ((1458 . 1463) (1457 . 1459) (#("{" 0 1 (fontified nil face #12=(rainbow-delimiters-depth-3-face))) . 1457) (1457 . 1458) (#(")" 0 1 (fontified nil face #11=(rainbow-delimiters-depth-3-face))) . 1457) (1456 . 1457) (#(" " 0 1 (fontified nil)) . 1456) (1456 . 1457) (#(")" 0 1 (fontified nil)) . 1456) (1452 . 1457) (#("ju" 0 1 (fontified nil) 1 2 (fontified nil)) . 1452) (1430 . 1454) (1429 . 1431) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . 1429) (1422 . 1430)) ((#("
    if(" 0 1 (fontified t) 1 5 (fontified nil) 5 7 (fontified nil face font-lock-keyword-face) 7 8 (fontified nil face font-lock-keyword-face)) . 1422) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -7) (undo-tree-id670 . -7) (1429 . 1430) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face #11#)) . 1429) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (#("!req.session.passport.ju" 0 12 (fontified nil) 12 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil)) . 1430) (undo-tree-id673 . -22) (undo-tree-id674 . -22) (1452 . 1454) (#("user)" 0 4 (fontified nil) 4 5 (fontified nil)) . 1452) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (1456 . 1457) (#(" " 0 1 (fontified nil)) . 1456) (1456 . 1457) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1456) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (1457 . 1458) (#("{" 0 1 (fontified nil face #12#)) . 1457) (1457 . 1458) (#("{}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1457) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 1458) (undo-tree-id681 . -1) (undo-tree-id682 . -1)) (23088 9559 536996 516000) 0 nil]) ((1478 . 1480) (1518 . 1519)) ((#(";" 0 1 (fontified nil)) . 1518) (#("  " 0 2 (fontified t)) . 1478)) (23088 9560 608057 458000) 1 nil]) ((#(" || \"\";" 0 4 (fontified t) 4 6 (fontified t face font-lock-string-face) 6 7 (fontified t)) . 1518) (undo-tree-id383 . -5)) ((1518 . 1525)) (23088 9561 729974 862000) 0 nil]) ((#("      if (userId === ''){
	  if(req.path != \"/login\") {
	      res.redirect('/login');
	  }
      }
" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-4-face)) 10 21 (fontified t) 21 23 (fontified t face font-lock-string-face) 23 24 (fontified t face (rainbow-delimiters-depth-4-face)) 24 25 (fontified t face (rainbow-delimiters-depth-4-face)) 25 26 (fontified t) 26 29 (fontified t) 29 31 (fontified t face font-lock-keyword-face) 31 32 (fontified t face (rainbow-delimiters-depth-5-face)) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 44 (fontified t) 44 52 (fontified t face font-lock-string-face) 52 53 (fontified t face (rainbow-delimiters-depth-5-face)) 53 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-5-face)) 55 56 (fontified t) 56 75 (fontified t) 75 76 (fontified t face (rainbow-delimiters-depth-6-face)) 76 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-6-face)) 85 87 (fontified t) 87 90 (fontified t) 90 91 (fontified t face (rainbow-delimiters-depth-5-face)) 91 92 (fontified t) 92 98 (fontified t) 98 99 (fontified t face (rainbow-delimiters-depth-4-face)) 99 100 (fontified t)) . 1534) (undo-tree-id384 . -26) (undo-tree-id385 . -26) (undo-tree-id386 . -87) (undo-tree-id387 . -87) (undo-tree-id388 . 1) (undo-tree-id389 . -98) (undo-tree-id390 . -55) (undo-tree-id391 . -6) (undo-tree-id392 . -98) (undo-tree-id393 . -56) (undo-tree-id394 . -56) (undo-tree-id395 . -92) (undo-tree-id396 . -92) (undo-tree-id397 . -100) (undo-tree-id398 . -100) (undo-tree-id399 . -98) (undo-tree-id400 . -6) (undo-tree-id401 . -98) (undo-tree-id402 . 2) (undo-tree-id403 . -99) (undo-tree-id404 . 76) (undo-tree-id405 . -25) 1632) ((1534 . 1634)) (23088 9562 917642 656000) 0 nil]) ((#("	  " 0 1 (fontified nil) 1 3 (fontified nil)) . -1632) (undo-tree-id406 . -3) (1632 . 1633) (#("	" 0 1 (fontified nil)) . 1632) (1626 . 1632) (1629 . 1630) (1625 . 1629) (#("    " 0 4 (fontified nil)) . -1624) (undo-tree-id407 . -4) (1628 . 1629) (1620 . 1628) (1619 . 1620) (#(")" 0 1 (fontified nil face #13=(rainbow-delimiters-depth-6-face))) . 1619) (1618 . 1619) (#(" " 0 1 (fontified nil)) . -1618) (1618 . 1619) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -1618) (1618 . 1619) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1618) (1617 . 1618) (#(" " 0 1 (fontified nil)) . -1617) (1617 . 1618) (#("'" 0 1 (fontified nil face font-lock-string-face)) . -1617) (1613 . 1618) (#("l" 0 1 (fontified t face font-lock-string-face)) . -1613) (undo-tree-id408 . -1) 1614 (1611 . 1614) (1610 . 1612) (#("'" 0 1 (fontified nil face #14=(rainbow-delimiters-depth-6-face))) . -1610) (1610 . 1611) (1609 . 1611) (#("(" 0 1 (fontified nil)) . -1609) (1609 . 1610) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1609) (undo-tree-id409 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -1610) (undo-tree-id410 . -1) 1611 (1597 . 1611) (1589 . 1597) 1565) ((#("
	      " 0 1 (fontified t) 1 8 (fontified nil)) . 1589) (undo-tree-id683 . -8) (undo-tree-id684 . -8) (#("res.redirect'/" 0 12 (fontified nil) 12 13 (fontified nil face font-lock-string-face) 13 14 (fontified nil face font-lock-string-face)) . 1597) (undo-tree-id685 . -12) (undo-tree-id686 . -12) (1609 . 1611) (#("(" 0 1 (fontified nil)) . 1609) (1609 . 1610) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face)) 1 2 (fontified nil face #13#)) . 1609) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (#("'" 0 1 (fontified nil face #14#)) . 1610) (1610 . 1611) (#("''" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1610) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (#("/ll" 0 2 (fontified nil face font-lock-string-face) 2 3 (fontified nil face font-lock-string-face)) . 1611) (undo-tree-id691 . -2) (undo-tree-id692 . -2) (1613 . 1614) (#("ogin'" 0 4 (fontified nil face font-lock-string-face) 4 5 (fontified nil face font-lock-string-face)) . 1613) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (1617 . 1618) (#(" " 0 1 (fontified nil)) . 1617) (1617 . 1618) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1617) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (1618 . 1619) (#(")" 0 1 (fontified nil face font-lock-string-face)) . 1618) (1618 . 1619) (#(" " 0 1 (fontified nil)) . 1618) (1618 . 1619) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face))) . 1618) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (1619 . 1620) (#(";" 0 1 (fontified nil)) . 1619) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (#("
	      " 0 1 (fontified t) 1 4 (fontified nil) 4 8 (fontified nil)) . 1620) (undo-tree-id701 . -8) (undo-tree-id702 . -8) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . 1628) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (1624 . 1628) (#("
	  " 0 1 (fontified t) 1 2 (fontified nil) 2 4 (fontified nil)) . 1625) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1629) (#("      " 0 6 (fontified nil)) . 1626) (undo-tree-id707 . -6) (undo-tree-id708 . -6) (1632 . 1633) (#("	" 0 1 (fontified nil)) . 1632) (1632 . 1635)) (23088 9563 398996 705000) 0 nil]) ((#("o" 0 1 (fontified nil)) . 1566) (1566 . 1567) (#(")" 0 1 (fontified nil face #17=(rainbow-delimiters-depth-5-face))) . 1566) (1565 . 1567) (#("(" 0 1 (fontified nil)) . 1565) (1559 . 1566) (#("}" 0 1 (fontified nil face #16=(rainbow-delimiters-depth-4-face))) . 1559) (1558 . 1560) (#("{" 0 1 (fontified nil face #15=(rainbow-delimiters-depth-4-face))) . 1558) (1558 . 1559) (1538 . 1540) (1555 . 1556) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1555) (1554 . 1555) (1553 . 1555) (#("'" 0 1 (fontified nil)) . 1553) (1552 . 1554) (#("=" 0 1 (fontified nil)) . 1552) (1550 . 1553) (#(" req.sess" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 1550) (1542 . 1559) (#("if" 0 1 (fontified nil) 1 2 (fontified nil)) . 1542) (1542 . 1544)) ((#("if" 0 1 (fontified nil) 1 2 (fontified nil)) . 1542) (1542 . 1544) (#("userId = req.sess" 0 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil)) . 1542) (undo-tree-id727 . -8) (undo-tree-id728 . -8) (1550 . 1559) (#("===" 0 2 (fontified nil) 2 3 (fontified nil)) . 1550) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (1552 . 1553) (#(" '" 0 1 (fontified nil) 1 2 (fontified nil)) . 1552) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (1553 . 1554) (#("''" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1553) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1554) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (1555 . 1556) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1555) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (#("  " 0 2 (fontified nil)) . 1538) (#("{" 0 1 (fontified nil face #15#)) . 1558) (1558 . 1559) (#("{}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face)) 1 2 (fontified nil face #16#)) . 1558) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (1559 . 1560) (#("
	  if(" 0 1 (fontified t) 1 4 (fontified nil) 4 6 (fontified nil face font-lock-keyword-face) 6 7 (fontified nil)) . 1559) (undo-tree-id741 . -6) (undo-tree-id742 . -6) (1565 . 1566) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face)) 1 2 (fontified nil face #17#)) . 1565) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (1566 . 1567) (#("o" 0 1 (fontified nil)) . 1566) (1566 . 1567)) (23088 9568 439416 189000) 0 nil] [nil nil ((#("t" 0 1 (fontified t)) . 1556) (#("a" 0 1 (fontified t)) . 1556) (#("p" 0 1 (fontified t)) . 1556) (#("." 0 1 (fontified t)) . 1556) (#("q" 0 1 (fontified t)) . 1556) (#("e" 0 1 (fontified t)) . 1556) (#("r" 0 1 (fontified t)) . 1556) (1555 . 1556) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1555) (1554 . 1555) (1553 . 1555) (#("'" 0 1 (fontified nil)) . -1553) (1542 . 1554)) ((#("userId === '" 0 11 (fontified nil) 11 12 (fontified nil)) . 1542) (undo-tree-id333 . -11) (1553 . 1554) (#("''" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1553) (undo-tree-id334 . -1) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1554) (undo-tree-id335 . -1) (1555 . 1556) (#(" " 0 1 (fontified nil)) . 1555) (1556 . 1557) (1556 . 1557) (1556 . 1557) (1556 . 1557) (1556 . 1557) (1556 . 1557) (1556 . 1557)) (23088 8050 749498 89000) 0 nil]) ((nil rear-nonsticky nil 1537 . 1538) (#("
" 0 1 (fontified nil)) . 1565) (1533 . 1566)) ((#("
    if (req.path != \"/login\") {
" 0 1 (fontified t) 1 4 (fontified nil) 4 5 (rear-nonsticky nil fontified nil) 5 7 (fontified nil face font-lock-keyword-face) 7 8 (fontified nil) 8 9 (fontified nil face (rainbow-delimiters-depth-4-face)) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 21 (fontified nil) 21 29 (fontified nil face font-lock-string-face) 29 30 (fontified nil face (rainbow-delimiters-depth-4-face)) 30 31 (fontified nil) 31 32 (fontified nil face (rainbow-delimiters-depth-4-face)) 32 33 (fontified nil)) . 1533) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -32) (undo-tree-id752 . -32) (1565 . 1566) (nil rear-nonsticky t 1537 . 1538)) (23088 9579 43368 531000) 0 nil]) ((#("    if (req.path != \"/login\") {
" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-4-face)) 8 20 (fontified t) 20 28 (fontified t face font-lock-string-face) 28 29 (fontified t face (rainbow-delimiters-depth-4-face)) 29 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-4-face)) 31 32 (fontified t)) . 1774) (undo-tree-id329 . -32) (undo-tree-id330 . -32) (undo-tree-id331 . -5) (undo-tree-id332 . -5) 1779 (t 23088 7787 374626 319000)) ((1774 . 1806)) (23088 9584 625169 534000) 0 nil]) ((1774 . 1869) (#("      if(req.path != '/login'){
    res.redirect(\"/login\");
      }else{
	  next();
      }
" 0 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t face (rainbow-delimiters-depth-4-face)) 9 21 (fontified t) 21 29 (fontified t face font-lock-string-face) 29 30 (fontified t face (rainbow-delimiters-depth-4-face)) 30 31 (fontified t face (rainbow-delimiters-depth-4-face)) 31 32 (fontified t) 32 35 (fontified t) 35 36 (fontified t rear-nonsticky t) 36 48 (fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-5-face)) 49 57 (fontified t face font-lock-string-face) 57 58 (fontified t face (rainbow-delimiters-depth-5-face)) 58 59 (fontified t) 59 60 (fontified t) 60 66 (fontified t) 66 67 (fontified t face (rainbow-delimiters-depth-4-face)) 67 71 (fontified t face font-lock-keyword-face) 71 72 (fontified t face (rainbow-delimiters-depth-4-face)) 72 73 (fontified t) 73 80 (fontified t) 80 81 (fontified t face (rainbow-delimiters-depth-5-face)) 81 82 (fontified t face (rainbow-delimiters-depth-5-face)) 82 83 (fontified t) 83 84 (fontified t) 84 90 (fontified t) 90 91 (fontified t face (rainbow-delimiters-depth-4-face)) 91 92 (fontified t)) . 1774) (undo-tree-id296 . 9) (undo-tree-id297 . -60) (undo-tree-id298 . -32) (undo-tree-id299 . -59) (undo-tree-id300 . -32) (undo-tree-id301 . -32) (undo-tree-id302 . -92) (undo-tree-id303 . -92) (undo-tree-id304 . -84) (undo-tree-id305 . -84) (undo-tree-id306 . -60) (undo-tree-id307 . -60) (undo-tree-id308 . -73) (undo-tree-id309 . -73) (undo-tree-id310 . -62) (undo-tree-id311 . -71) (undo-tree-id312 . -71) (undo-tree-id313 . 10) (undo-tree-id314 . 10) (undo-tree-id315 . -82) (undo-tree-id316 . -82) (undo-tree-id317 . -82) (undo-tree-id318 . -92)) nil (23088 9594 795945 553000) 0 nil]) ((1856 . 1857) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . 1856) (1855 . 1856) (1854 . 1856) (#("(" 0 1 (fontified nil)) . -1854) (1850 . 1855) (1847 . 1850) (1847 . 1848) 1852) nil (23088 7787 326204 163000) 0 nil]) ((1846 . 1853) (1845 . 1847) (#("{" 0 1 (fontified nil face font-lock-keyword-face)) . -1845) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (1845 . 1846) (#(" " 0 1 (fontified t)) . -1845) (undo-tree-id321 . -1) 1846 (1841 . 1846)) nil (23088 7787 326208 777000) 0 nil]) ((nil rear-nonsticky nil 1809 . 1810) (1806 . 1834) 1808) nil (23088 7787 326210 698000) 0 nil]) ((#("    res.redirect(\"/login\");
" 0 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-4-face)) 17 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (rainbow-delimiters-depth-4-face)) 26 27 (fontified t) 27 28 (fontified t)) . 1814) (undo-tree-id322 . -28) (undo-tree-id323 . -28) (undo-tree-id324 . -5) 1819) nil (23088 7787 326213 330000) 0 nil]) ((1805 . 1812) (1804 . 1806) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -1804) (1804 . 1805) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1804) (1803 . 1804) (#(" " 0 1 (fontified nil)) . -1803) (1803 . 1804) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -1803) (1803 . 1804) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1803) (1796 . 1803) (1795 . 1797) (#("'" 0 1 (fontified nil)) . -1795) (1794 . 1796) (#("'" 0 1 (fontified nil face font-lock-string-face)) . -1794) (undo-tree-id325 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . 1795) (1794 . 1796) (#("'" 0 1 (fontified nil)) . -1794) (1792 . 1795) (1783 . 1792) (1782 . 1784) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1782) (1780 . 1783) (1774 . 1780) (1774 . 1775) 1778) nil (23088 7787 326221 550000) 0 nil]) ((#("    console.log(e);
" 0 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-4-face)) 16 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-4-face)) 18 20 (fontified t)) . 1774) (undo-tree-id326 . -20) (undo-tree-id327 . -20) (undo-tree-id328 . -18) 1792) nil (23088 7787 326227 954000) 0 nil]) ((#("0" 0 1 (fontified t face font-lock-string-face)) . 1523) (t 23088 7700 215856 294000)) nil (23088 7787 326229 191000) 0 nil]) ((1523 . 1524) (t 23088 7610 107129 664000)) nil (23088 7700 158496 171000) 0 nil]) ((1774 . 1794) (#("      console.log(e);
" 0 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-4-face)) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-4-face)) 20 21 (fontified t) 21 22 (fontified t)) . 1774) (undo-tree-id287 . 1) (undo-tree-id288 . -22) (undo-tree-id289 . -22) (undo-tree-id290 . 2) (undo-tree-id291 . 2) (undo-tree-id292 . -20) (undo-tree-id293 . -20) (undo-tree-id294 . -20) (undo-tree-id295 . -22)) nil (23088 7610 61597 535000) 0 nil]) ((1794 . 1795) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1794) (1792 . 1794) (1791 . 1793) (#("(" 0 1 (fontified nil)) . -1791) (1780 . 1792) (1773 . 1780) (t 23088 7576 494271 858000) 1772) nil (23088 7610 61602 224000) 0 nil]) ((1605 . 1654) (#("  console.log(!user && req.path === \"/login\");
" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t) 2 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-4-face)) 14 23 (fontified t) 23 36 (fontified t) 36 44 (fontified t face font-lock-string-face) 44 45 (fontified t face (rainbow-delimiters-depth-4-face)) 45 46 (fontified t) 46 47 (fontified t)) . 1605) (undo-tree-id268 . -47) (undo-tree-id269 . -47) (undo-tree-id270 . 24) (undo-tree-id271 . -46) (undo-tree-id272 . -46) (undo-tree-id273 . -47) (undo-tree-id274 . -47) (undo-tree-id275 . 25) (undo-tree-id276 . 25) (undo-tree-id277 . -22) (undo-tree-id278 . -22) (undo-tree-id279 . -22) (undo-tree-id280 . -47)) nil (23088 7576 436668 795000) 0 nil]) ((1619 . 1628)) nil (23088 7576 436671 931000) 0 nil]) ((nil rear-nonsticky nil 1606 . 1607) (#("
" 0 1 (fontified nil)) . -1642) (1604 . 1643) 1587) nil (23088 7576 436673 646000) 0 nil]) ((#("  console.log(req.path === \"/login\");
" 0 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-3-face)) 14 27 (fontified t) 27 35 (fontified t face font-lock-string-face) 35 36 (fontified t face (rainbow-delimiters-depth-3-face)) 36 38 (fontified t)) . 1423) (undo-tree-id281 . 14) (undo-tree-id282 . -14) (undo-tree-id283 . -38) (undo-tree-id284 . -38) (undo-tree-id285 . -23) (undo-tree-id286 . -14) 1437 (t 23088 7501 608665 780000)) nil (23088 7576 436679 460000) 0 nil]) ((1446 . 1447) (t 23088 7484 322244 189000)) nil (23088 7501 582074 941000) 0 nil]) ((1642 . 1683) (#("    if (!user && (req.path != \"/login\")) {
" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-4-face)) 8 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-5-face)) 18 26 (fontified t) 26 30 (fontified t) 30 38 (fontified t face font-lock-string-face) 38 39 (fontified t face (rainbow-delimiters-depth-5-face)) 39 40 (fontified t face (rainbow-delimiters-depth-4-face)) 40 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-4-face)) 42 43 (fontified t)) . 1642) (undo-tree-id249 . 25) (undo-tree-id250 . -37) (undo-tree-id251 . -17) (undo-tree-id252 . 4) (undo-tree-id253 . -17) (undo-tree-id254 . -37) (undo-tree-id255 . -43) (undo-tree-id256 . -43) (undo-tree-id257 . -17) (undo-tree-id258 . -17) (undo-tree-id259 . 26) (undo-tree-id260 . 26) (undo-tree-id261 . -17) (undo-tree-id262 . -17) (undo-tree-id263 . -17) (undo-tree-id264 . -43) (1423 . 1460) (#("    console.log(req.path == '/login');
" 0 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 28 (fontified t) 28 36 (fontified t face font-lock-string-face) 36 37 (fontified t face (rainbow-delimiters-depth-3-face)) 37 38 (fontified t) 38 39 (fontified t)) . 1423) (undo-tree-id265 . -39) (undo-tree-id266 . -39) (undo-tree-id267 . -39)) nil (23088 7484 290014 139000) 0 nil]) ((1682 . 1683) (1661 . 1662) 1680) nil (23088 7484 290018 651000) 0 nil]) ((1460 . 1461) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1460) (1459 . 1460) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1459) (1452 . 1459) (1451 . 1453) (#("'" 0 1 (fontified nil)) . -1451) (1448 . 1452) (1439 . 1448) (1438 . 1440) (#("(" 0 1 (fontified nil)) . -1438) (1427 . 1439) (1422 . 1427) 1411) nil (23088 7484 290022 566000) 0 nil]) ((1405 . 1412) (t 23088 7410 29965 300000)) nil (23088 7484 290024 804000) 0 nil]) ((#("=" 0 1 (fontified t)) . 1626) (t 23088 7365 750594 767000)) nil (23088 7410 3987 396000) 0 nil]) ((#(".toString()" 0 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-5-face)) 10 11 (fontified t face (rainbow-delimiters-depth-5-face))) . 1623) (t 23088 7312 291355 847000)) nil (23088 7365 726089 705000) 0 nil]) ((1598 . 1651) (#("      if (!user && req.path.toString() !== \"/login\") {
" 0 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-4-face)) 10 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-5-face)) 37 38 (fontified t face (rainbow-delimiters-depth-5-face)) 38 43 (fontified t) 43 51 (fontified t face font-lock-string-face) 51 52 (fontified t face (rainbow-delimiters-depth-4-face)) 52 53 (fontified t) 53 54 (fontified t face (rainbow-delimiters-depth-4-face)) 54 55 (fontified t)) . 1598) (undo-tree-id239 . -55) (undo-tree-id240 . -55) (undo-tree-id241 . 17) (undo-tree-id242 . -27) (undo-tree-id243 . 18) (undo-tree-id244 . 18) (undo-tree-id245 . -37) (undo-tree-id246 . -37) (undo-tree-id247 . -37) (undo-tree-id248 . -55)) nil (23088 7312 261944 181000) 0 nil]) ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . 1636) (1635 . 1636) (1602 . 1604) (1632 . 1634) (#("(" 0 1 (fontified nil)) . -1632) (1623 . 1633) (t 23088 7255 572164 811000)) nil (23088 7312 261948 750000) 0 nil]) ((1598 . 1640) (#("    if (!user && req.path !== '/login') {
" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-4-face)) 8 30 (fontified t) 30 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face (rainbow-delimiters-depth-4-face)) 39 40 (fontified t) 40 41 (fontified t face (rainbow-delimiters-depth-4-face)) 41 42 (fontified t)) . 1598) (undo-tree-id230 . 5) (undo-tree-id231 . -42) (undo-tree-id232 . -42) (undo-tree-id233 . 6) (undo-tree-id234 . 6) (undo-tree-id235 . -36) (undo-tree-id236 . -36) (undo-tree-id237 . -36) (undo-tree-id238 . -42)) nil (23088 7255 545264 81000) 0 nil]) ((1632 . 1635) (1629 . 1632) (1628 . 1630) (#("'" 0 1 (fontified nil)) . -1628) (1611 . 1629) (t 23088 7207 549517 721000)) nil (23088 7255 545268 537000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1611)) nil (23088 7207 526192 740000) 0 nil]) ((#("&" 0 1 (fontified t)) . 1612)) nil (23088 7207 526195 645000) 0 nil]) ((#("&" 0 1 (fontified t)) . 1612) (t 23088 7196 266345 813000)) nil (23088 7207 526197 468000) 0 nil]) ((1409 . 1413) (#("n" 0 1 (fontified t)) . 1409) (#("o" 0 1 (fontified t)) . 1409) (#("i" 0 1 (fontified t)) . 1409) (#("s" 0 1 (fontified t)) . 1409) (#("s" 0 1 (fontified t)) . 1409) (#("e" 0 1 (fontified t)) . 1409) (#("s" 0 1 (fontified t)) . 1409) (1614 . 1617) (t 23088 7122 230740 293000)) nil (23088 7196 209241 364000) 0 nil] [nil ([nil ([nil ([nil nil ((#("	" 0 1 (fontified nil)) . -1585) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (1581 . 1585)) ((#("    " 0 4 (fontified nil)) . 1581) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . 4) (undo-tree-id229 . 4) (1585 . 1586) (t 23088 7011 499001 231000)) (23088 7011 472152 970000) 0 nil]) ((#("         " 0 3 (fontified nil) 3 9 (fontified nil)) . -1582) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . 6) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -2) (1581 . 1582) 1583) ((#("	" 0 1 (fontified nil)) . 1581) (1582 . 1591)) (23088 7108 111122 368000) 0 nil]) ((#("    }
" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face)) 5 6 (fontified t)) . 1598) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -3) 1601) ((1598 . 1604)) (23088 7108 693242 938000) 0 nil]) ((#(" user = user[0];
    if (!user) {
      res.redirect(\"/login\");
    } else {
" 0 12 (fontified t) 12 13 (fontified t face (rainbow-delimiters-depth-4-face)) 13 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-4-face)) 15 21 (fontified t) 21 23 (fontified t face font-lock-keyword-face) 23 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-4-face)) 25 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-4-face)) 31 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-4-face)) 33 52 (fontified t) 52 53 (fontified t face (rainbow-delimiters-depth-5-face)) 53 61 (fontified t face font-lock-string-face) 61 62 (fontified t face (rainbow-delimiters-depth-5-face)) 62 68 (fontified t) 68 69 (fontified t face (rainbow-delimiters-depth-4-face)) 69 70 (fontified t) 70 74 (fontified t face font-lock-keyword-face) 74 75 (fontified t) 75 76 (fontified t face (rainbow-delimiters-depth-4-face)) 76 77 (fontified t)) . 1584) (undo-tree-id212 . -76) (undo-tree-id213 . -76) (undo-tree-id214 . -17) (undo-tree-id215 . -17) (undo-tree-id216 . -34) (undo-tree-id217 . -34) (undo-tree-id218 . -64) (undo-tree-id219 . -64) (undo-tree-id220 . -77) (undo-tree-id221 . -77) (undo-tree-id222 . -76) (undo-tree-id223 . -76) 1660 (t 23088 6971 269582 897000)) ((1584 . 1661)) (23088 7109 110378 964000) 0 nil]) ((#("    }catch(e){
	res.redirect('/login');
    }
" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face)) 5 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t face (rainbow-delimiters-depth-3-face)) 11 12 (fontified t) 12 13 (fontified t face (rainbow-delimiters-depth-3-face)) 13 14 (fontified t face (rainbow-delimiters-depth-3-face)) 14 15 (fontified t) 15 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-4-face)) 29 37 (fontified t face font-lock-string-face) 37 38 (fontified t face (rainbow-delimiters-depth-4-face)) 38 39 (fontified t) 39 40 (fontified t) 40 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-3-face)) 45 46 (fontified t)) . 1729) (undo-tree-id155 . -15) (undo-tree-id156 . -15) (undo-tree-id157 . 7) (undo-tree-id158 . -46) (undo-tree-id159 . -46) (undo-tree-id160 . -40) (undo-tree-id161 . -40) (undo-tree-id162 . -13) (undo-tree-id163 . -13) (undo-tree-id164 . -36) (undo-tree-id165 . -37) (undo-tree-id166 . 8) (undo-tree-id167 . 8) (undo-tree-id168 . -38) (undo-tree-id169 . -38) (undo-tree-id170 . -38) (undo-tree-id171 . -46) (#("  } else {
    next();
" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-4-face)) 3 4 (fontified t) 4 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-4-face)) 10 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-5-face)) 20 21 (fontified t face (rainbow-delimiters-depth-5-face)) 21 23 (fontified t)) . 1725) (undo-tree-id172 . -11) (undo-tree-id173 . -11) (undo-tree-id174 . -23) (undo-tree-id175 . -23) (undo-tree-id176 . -23) (1522 . 1697) (#("    try{
  const user = await User.find({ _id: userId });
  user = user[0];
  if (!user) {
" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face (rainbow-delimiters-depth-3-face)) 8 9 (fontified t) 9 11 (fontified t) 11 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 21 (fontified t face font-lock-variable-name-face) 21 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-4-face)) 40 41 (fontified t face (rainbow-delimiters-depth-5-face)) 41 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-5-face)) 55 56 (fontified t face (rainbow-delimiters-depth-4-face)) 56 57 (fontified t) 57 58 (fontified t) 58 71 (fontified t) 71 72 (fontified t face (rainbow-delimiters-depth-4-face)) 72 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-4-face)) 74 75 (fontified t) 75 76 (fontified t) 76 78 (fontified t) 78 80 (fontified t face font-lock-keyword-face) 80 81 (fontified t) 81 82 (fontified t face (rainbow-delimiters-depth-4-face)) 82 87 (fontified t) 87 88 (fontified t face (rainbow-delimiters-depth-4-face)) 88 89 (fontified t) 89 90 (fontified t face (rainbow-delimiters-depth-4-face)) 90 91 (fontified t)) . 1522) (undo-tree-id177 . -91) (undo-tree-id178 . -91) (undo-tree-id179 . -76) (undo-tree-id180 . -76) (undo-tree-id181 . -9) (undo-tree-id182 . -9) (undo-tree-id183 . -58) (undo-tree-id184 . -58) (undo-tree-id185 . -91)) nil (23088 7109 680376 583000) 0 nil]) ((1706 . 1707) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1706) (undo-tree-id186 . -1) (1705 . 1706) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1705) (undo-tree-id187 . -1) (1698 . 1705) (1697 . 1699) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -1697) (1697 . 1698) (1696 . 1698) (#("(" 0 1 (fontified nil)) . -1696) (1684 . 1697) (1683 . 1684) (1683 . 1684) 1686) nil (23088 6971 246257 551000) 0 nil]) ((1682 . 1687) (1681 . 1683) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1681) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (1681 . 1682) (#("_" 0 1 (fontified t)) . -1681) (undo-tree-id190 . -1) 1682 (1681 . 1682) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1681) (1679 . 1681) (1678 . 1680) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1678) (1673 . 1679) (#("
" 0 1 (fontified t)) . -1673) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#(" " 0 1 (fontified t)) . -1674) (undo-tree-id194 . -1) (#(" " 0 1 (fontified t)) . -1675) (undo-tree-id195 . -1) (#(" " 0 1 (fontified t)) . -1676) (undo-tree-id196 . -1) (#(" " 0 1 (fontified t)) . -1677) (undo-tree-id197 . -1) (#("c" 0 1 (fontified t)) . -1678) (undo-tree-id198 . -1) 1679 (1678 . 1679) (1673 . 1678) (t 23088 6925 180251 120000) 1672) nil (23088 6971 246270 182000) 0 nil]) ((#("	" 0 1 (fontified nil)) . -1672) (1672 . 1673) (#("	" 0 1 (fontified nil)) . 1672) (undo-tree-id154 . -1) (1668 . 1672) (1669 . 1670) (1667 . 1669) 1664) nil (23088 6925 154204 128000) 0 nil] [nil ([nil nil ((#("  user = user[0];
" 0 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-4-face)) 14 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-4-face)) 16 17 (fontified t) 17 18 (fontified t)) . 1580) (undo-tree-id130 . -18) (undo-tree-id131 . -18) (undo-tree-id132 . 18) (undo-tree-id133 . -4) 1584) ((1580 . 1598)) (23088 6903 658504 72000) 0 nil]) ((#("  if (!user) {
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-4-face)) 6 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-4-face)) 12 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-4-face)) 14 15 (fontified t)) . 1598) (undo-tree-id134 . -15) (undo-tree-id135 . -15) (undo-tree-id136 . -2) 1600) ((1598 . 1613)) (23088 6903 658808 485000) 0 nil]) ((#("    }
" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face)) 5 6 (fontified t)) . 1580) (undo-tree-id148 . 1) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -4) (undo-tree-id152 . 2) (undo-tree-id153 . -5)) ((1580 . 1586)) (23088 6909 630784 129000) 0 nil]) ((#("	" 0 1 (fontified nil)) . -1584) (1584 . 1585) (#("	" 0 1 (fontified nil)) . 1584) (undo-tree-id143 . -1) (1580 . 1584) (1581 . 1582) (1579 . 1581) 1538) nil (23088 6908 211745 814000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1530) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("	" 0 1 (fontified t)) . -1531) (undo-tree-id147 . -1) 1532 (1530 . 1532) 1529) nil (23088 6903 658587 259000) 0 nil]) ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 1530) (1529 . 1531) (#("{" 0 1 (fontified nil face font-lock-keyword-face)) . -1529) (1526 . 1530) (1521 . 1526) (t 23088 6821 185100 355000) 1472) nil (23088 6903 658598 289000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-string-face)) . 297) (t 23088 6785 765619 557000)) nil (23088 6821 160154 289000) 0 nil]) ((272 . 336) (t 23088 6751 36130 247000)) nil (23088 6785 747295 211000) 0 nil]) ((1356 . 1409) (#("    req.session.passport = req.session.passport || {};
" 0 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-3-face)) 52 53 (fontified t face (rainbow-delimiters-depth-3-face)) 53 54 (fontified t) 54 55 (fontified t)) . 1356) (undo-tree-id116 . -55) (undo-tree-id117 . -55) (undo-tree-id118 . 1) (undo-tree-id119 . 2) (undo-tree-id120 . 2) (undo-tree-id121 . -53) (undo-tree-id122 . -53) (undo-tree-id123 . -53) (undo-tree-id124 . -55)) nil (23088 6751 1456 916000) 0 nil]) ((1409 . 1410) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1409) (undo-tree-id125 . -1) (1408 . 1409) (1358 . 1360) (1405 . 1407) (#("{" 0 1 (fontified nil)) . -1405) (1401 . 1406) (#(" " 0 1 (fontified t)) . -1401) (undo-tree-id126 . -1) 1402 (1381 . 1402) (1362 . 1381) (#("r" 0 1 (fontified t)) . -1362) (undo-tree-id127 . -1) 1363 (1358 . 1363) (#(" " 0 1 (fontified t)) . -1358) (undo-tree-id128 . -1) (#(" " 0 1 (fontified t)) . -1359) (undo-tree-id129 . -1) 1360 (1355 . 1360) (t 23088 6661 150793 515000) 1330) nil (23088 6751 1468 809000) 0 nil]) ((1328 . 1543) (#("    console.log(req.session);
    const userId = req.session.passport.user || '';
    const user = await User.find({_id: userId});
    user = user[0];
    if(!user){
	res.redirect('/login');
    } else {
	next();
    }
" 0 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-3-face)) 28 29 (fontified t) 29 30 (fontified t) 30 34 (fontified t) 34 39 (fontified t face font-lock-keyword-face) 39 40 (fontified t) 40 46 (fontified t face font-lock-variable-name-face) 46 78 (fontified t) 78 80 (fontified t face font-lock-string-face) 80 81 (fontified t) 81 82 (fontified t) 82 86 (fontified t) 86 91 (fontified t face font-lock-keyword-face) 91 92 (fontified t) 92 96 (fontified t face font-lock-variable-name-face) 96 114 (fontified t) 114 115 (fontified t face (rainbow-delimiters-depth-3-face)) 115 116 (fontified t face (rainbow-delimiters-depth-4-face)) 116 127 (fontified t) 127 128 (fontified t face (rainbow-delimiters-depth-4-face)) 128 129 (fontified t face (rainbow-delimiters-depth-3-face)) 129 130 (fontified t) 130 131 (fontified t) 131 146 (fontified t) 146 147 (fontified t face (rainbow-delimiters-depth-3-face)) 147 148 (fontified t) 148 149 (fontified t face (rainbow-delimiters-depth-3-face)) 149 150 (fontified t) 150 151 (fontified t) 151 155 (fontified t) 155 157 (fontified t face font-lock-keyword-face) 157 158 (fontified t face (rainbow-delimiters-depth-3-face)) 158 163 (fontified t) 163 164 (fontified t face (rainbow-delimiters-depth-3-face)) 164 165 (fontified t face (rainbow-delimiters-depth-3-face)) 165 166 (fontified t) 166 179 (fontified t) 179 180 (fontified t face (rainbow-delimiters-depth-4-face)) 180 188 (fontified t face font-lock-string-face) 188 189 (fontified t face (rainbow-delimiters-depth-4-face)) 189 190 (fontified t) 190 191 (fontified t) 191 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-3-face)) 196 197 (fontified t) 197 201 (fontified t face font-lock-keyword-face) 201 202 (fontified t) 202 203 (fontified t face (rainbow-delimiters-depth-3-face)) 203 204 (fontified t) 204 209 (fontified t) 209 210 (fontified t face (rainbow-delimiters-depth-4-face)) 210 211 (fontified t face (rainbow-delimiters-depth-4-face)) 211 212 (fontified t) 212 213 (fontified t) 213 217 (fontified t) 217 218 (fontified t face (rainbow-delimiters-depth-3-face)) 218 219 (fontified t)) . 1328) (undo-tree-id18 . -131) (undo-tree-id19 . -131) (undo-tree-id20 . -151) (undo-tree-id21 . -151) (undo-tree-id22 . -166) (undo-tree-id23 . -166) (undo-tree-id24 . -191) (undo-tree-id25 . -191) (undo-tree-id26 . -204) (undo-tree-id27 . -204) (undo-tree-id28 . -82) (undo-tree-id29 . -82) (undo-tree-id30 . -219) (undo-tree-id31 . -219) (undo-tree-id32 . -213) (undo-tree-id33 . -213) (undo-tree-id34 . -104) (undo-tree-id35 . -30) (undo-tree-id36 . -30) (undo-tree-id37 . -74) (undo-tree-id38 . -219)) nil (23088 6661 123963 338000) 0 nil]) ((1549 . 1550)) nil (23088 6661 123966 897000) 0 nil]) ((1477 . 1478)) nil (23088 6661 123968 99000) 0 nil]) ((1475 . 1476) (1474 . 1476) (#("[" 0 1 (fontified nil)) . -1474) (1463 . 1475) (1458 . 1463) 1432) nil (23088 6661 123970 160000) 0 nil]) ((1414 . 1420) (#("l" 0 1 (fontified t)) . -1414) (undo-tree-id39 . -1) (#("e" 0 1 (fontified t)) . -1415) (undo-tree-id40 . -1) (#("t" 0 1 (fontified t)) . -1416) (undo-tree-id41 . -1) 1417 (1414 . 1417)) nil (23088 6661 123975 767000) 0 nil]) ((1513 . 1514) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1513) (1512 . 1513) (1511 . 1513) (#("(" 0 1 (fontified nil)) . -1511) (1507 . 1512) (1506 . 1507) (1506 . 1507) 1509) nil (23088 6661 123978 902000) 0 nil]) ((1505 . 1510) (1504 . 1506) (#("{" 0 1 (fontified nil)) . -1504) (1498 . 1505) (#("
" 0 1 (fontified t)) . -1498) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t)) . -1499) (undo-tree-id45 . -1) (#(" " 0 1 (fontified t)) . -1500) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t)) . -1501) (undo-tree-id47 . -1) (#(" " 0 1 (fontified t)) . -1502) (undo-tree-id48 . -1) (#("e" 0 1 (fontified t)) . -1503) (undo-tree-id49 . -1) (#("l" 0 1 (fontified t)) . -1504) (undo-tree-id50 . -1) (#("s" 0 1 (fontified t)) . -1505) (undo-tree-id51 . -1) 1506 (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -1506) (undo-tree-id52 . -1) 1507 (1503 . 1507) (1498 . 1503) 1497) nil (23088 6661 123989 910000) 0 nil]) ((1491 . 1492) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1491) (1490 . 1491) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1490) (1483 . 1490) (1482 . 1484) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -1482) (1482 . 1483) (1481 . 1483) (#("(" 0 1 (fontified nil)) . -1481) (1469 . 1482) (1468 . 1469) (1468 . 1469) 1471) nil (23088 6661 123995 478000) 0 nil]) ((1467 . 1472) (1466 . 1468) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1466) (1466 . 1467) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1466) (1465 . 1466) (#(" " 0 1 (fontified nil)) . -1465) (1465 . 1466) (#(")" 0 1 (fontified nil)) . -1465) (1460 . 1466) (#("1" 0 1 (fontified t)) . -1460) (undo-tree-id53 . -1) 1461 (1460 . 1461) (1459 . 1461) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1459) (1457 . 1460) (1452 . 1457) 1450) nil (23088 6661 124001 217000) 0 nil]) ((1451 . 1452) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1451) (1450 . 1451) (#(" " 0 1 (fontified nil)) . -1450) (1450 . 1451) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -1450) (1450 . 1451) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1450) (1449 . 1450) (#(" " 0 1 (fontified nil)) . -1449) (1449 . 1450) (#("}" 0 1 (fontified nil)) . -1449) (1441 . 1450) (1438 . 1441) (#("i" 0 1 (fontified t)) . -1438) (undo-tree-id54 . -1) (#("d" 0 1 (fontified t)) . -1439) (undo-tree-id55 . -1) 1440 (1438 . 1440) (1437 . 1439) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1437) (1437 . 1438) (1436 . 1438) (#("(" 0 1 (fontified nil)) . -1436) (1418 . 1437)) nil (23088 6661 124008 538000) 0 nil]) ((1356 . 1357) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1356) (1353 . 1356) (1344 . 1353) (1343 . 1345) (#("(" 0 1 (fontified nil)) . -1343) (1332 . 1344) (1328 . 1332) (1328 . 1329) 1332) nil (23088 6661 124012 681000) 0 nil]) ((#("    console.log(req.)
" 0 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-3-face)) 21 22 (fontified t)) . 1328) (undo-tree-id56 . 1) (undo-tree-id57 . -20) (undo-tree-id58 . -22) (undo-tree-id59 . -22) (undo-tree-id60 . -21) (undo-tree-id61 . -21) (undo-tree-id62 . -21) (undo-tree-id63 . 2) (undo-tree-id64 . -21) (undo-tree-id65 . 7) (undo-tree-id66 . -16) 1348) nil (23088 6661 124021 772000) 0 nil]) ((1346 . 1348) (1344 . 1346) (1343 . 1345) (#("(" 0 1 (fontified nil)) . -1343) (1332 . 1344) (1328 . 1332) (1328 . 1329) 1378) nil (23088 6661 124024 674000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1379) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#(" " 0 1 (fontified t)) . -1380) (undo-tree-id70 . -1) (#(" " 0 1 (fontified t)) . -1381) (undo-tree-id71 . -1) (#(" " 0 1 (fontified t)) . -1382) (undo-tree-id72 . -1) (#(" " 0 1 (fontified t)) . -1383) (undo-tree-id73 . -1) (#("c" 0 1 (fontified t)) . -1384) (undo-tree-id74 . -1) (#("o" 0 1 (fontified t)) . -1385) (undo-tree-id75 . -1) (#("n" 0 1 (fontified t)) . -1386) (undo-tree-id76 . -1) (#("s" 0 1 (fontified t)) . -1387) (undo-tree-id77 . -1) (#("o" 0 1 (fontified t)) . -1388) (undo-tree-id78 . -1) (#("l" 0 1 (fontified t)) . -1389) (undo-tree-id79 . -1) (#("e" 0 1 (fontified t)) . -1390) (undo-tree-id80 . -1) 1391 (1384 . 1391) (1380 . 1384) (1380 . 1381) 1387) nil (23088 6661 124037 422000) 0 nil]) ((1300 . 1306)) nil (23088 6661 124040 670000) 0 nil]) ((1378 . 1382) (#("U" 0 1 (fontified t)) . -1378) (undo-tree-id81 . -1) (#("s" 0 1 (fontified t)) . -1379) (undo-tree-id82 . -1) (#("e" 0 1 (fontified t)) . -1380) (undo-tree-id83 . -1) (#("r" 0 1 (fontified t)) . -1381) (undo-tree-id84 . -1) 1382 (1378 . 1382) (1373 . 1378) 1372) nil (23088 6661 124045 832000) 0 nil]) ((1372 . 1373) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1372) (1371 . 1372) (1370 . 1372) (#("'" 0 1 (fontified nil)) . -1370) (1366 . 1371) (#(";" 0 1 (fontified t)) . -1366) (undo-tree-id85 . -1) 1367) nil (23088 6661 124049 464000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1321) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#(" " 0 1 (fontified t)) . -1322) (undo-tree-id89 . -1) (#(" " 0 1 (fontified t)) . -1323) (undo-tree-id90 . -1) (#(" " 0 1 (fontified t)) . -1324) (undo-tree-id91 . -1) (#(" " 0 1 (fontified t)) . -1325) (undo-tree-id92 . -1) 1326 (#("i" 0 1 (fontified t)) . -1326) (undo-tree-id93 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -1327) (undo-tree-id94 . -1) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1328) (undo-tree-id95 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 1329) (#("r" 0 1 (fontified t)) . -1329) (undo-tree-id96 . -1) (#("e" 0 1 (fontified t)) . -1330) (undo-tree-id97 . -1) 1331 (1329 . 1331) (1328 . 1330) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1328) (1326 . 1329) (1322 . 1326) (1322 . 1323) 1366) nil (23088 6661 124060 901000) 0 nil]) ((1366 . 1367) (#("." 0 1 (fontified t)) . -1366) (undo-tree-id98 . -1) 1367 (1366 . 1367) (#(" " 0 1 (fontified t)) . -1366) (undo-tree-id99 . -1) (#("|" 0 1 (fontified t)) . -1367) (undo-tree-id100 . -1) (#("|" 0 1 (fontified t)) . -1368) (undo-tree-id101 . -1) (#(" " 0 1 (fontified t)) . -1369) (undo-tree-id102 . -1) 1370 (1353 . 1370) (1349 . 1353) (1347 . 1349) (1326 . 1347) (#("u" 0 1 (fontified t)) . -1326) (undo-tree-id103 . -1) (#("s" 0 1 (fontified t)) . -1327) (undo-tree-id104 . -1) (#("e" 0 1 (fontified t)) . -1328) (undo-tree-id105 . -1) (#("r" 0 1 (fontified t)) . -1329) (undo-tree-id106 . -1) (#("I" 0 1 (fontified t)) . -1330) (undo-tree-id107 . -1) (#("d" 0 1 (fontified t)) . -1331) (undo-tree-id108 . -1) 1332 (1326 . 1332) (#("r" 0 1 (fontified t)) . -1326) (undo-tree-id109 . -1) (#("e" 0 1 (fontified t)) . -1327) (undo-tree-id110 . -1) (#("q" 0 1 (fontified t)) . -1328) (undo-tree-id111 . -1) 1329 (1326 . 1329) (1322 . 1326) (1322 . 1323)) nil (23088 6661 124079 826000) 0 nil]) ((1321 . 1322) (1320 . 1322) (#("{" 0 1 (fontified nil)) . -1320) (1317 . 1321) (#("+" 0 1 (fontified t)) . -1317) (undo-tree-id112 . -1) 1318 (1316 . 1318) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 1316) (1315 . 1316) (#(" " 0 1 (fontified nil)) . -1315) (1315 . 1316) (#(")" 0 1 (fontified nil)) . -1315) (1305 . 1316) (#("r" 0 1 (fontified t)) . -1305) (undo-tree-id113 . -1) (#("e" 0 1 (fontified t)) . -1306) (undo-tree-id114 . -1) 1307 (1304 . 1307) (#("." 0 1 (fontified t)) . -1304) (undo-tree-id115 . -1) 1305 (1301 . 1305) (1300 . 1302) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1300) (1300 . 1301) (1299 . 1301) (#("(" 0 1 (fontified nil)) . -1299) (1292 . 1300) (1291 . 1292) (1290 . 1291) (t 23088 5721 814134 711000) 1289) nil (23088 6661 124091 102000) 0 nil]) ((1238 . 1283) (#("  require(\"./mongo\")().then(() => next());
" 0 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-4-face)) 10 19 (fontified t face font-lock-string-face) 19 20 (fontified t face (rainbow-delimiters-depth-4-face)) 20 21 (fontified t face (rainbow-delimiters-depth-4-face)) 21 22 (fontified t face (rainbow-delimiters-depth-4-face)) 22 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-4-face)) 28 29 (fontified t face (rainbow-delimiters-depth-5-face)) 29 30 (fontified t face (rainbow-delimiters-depth-5-face)) 30 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-5-face)) 39 40 (fontified t face (rainbow-delimiters-depth-5-face)) 40 41 (fontified t face (rainbow-delimiters-depth-4-face)) 41 43 (fontified t)) . 1238) (undo-tree-id0 . -43) (undo-tree-id1 . -43) (undo-tree-id2 . -43) (1215 . 1227) (#("  next();
" 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-4-face)) 7 8 (fontified t face (rainbow-delimiters-depth-4-face)) 8 10 (fontified t)) . 1215) (undo-tree-id3 . -10) (undo-tree-id4 . -10) (undo-tree-id5 . -10) (351 . 401) (#("const facebook = require('./routes/facebook.js');
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 14 (fontified t face font-lock-variable-name-face) 14 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 26 (fontified t face font-lock-string-face) 26 47 (fontified t face font-lock-string-face) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 49 (fontified t) 49 50 (fontified t)) . 351) (undo-tree-id6 . -48) (undo-tree-id7 . -48) (undo-tree-id8 . -50) (undo-tree-id9 . -50) (undo-tree-id10 . -50) (221 . 272) (#("const expressSession = require('express-session');
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 20 (fontified t face font-lock-variable-name-face) 20 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-1-face)) 31 48 (fontified t face font-lock-string-face) 48 49 (fontified t face (rainbow-delimiters-depth-1-face)) 49 51 (fontified t)) . 221) (undo-tree-id11 . -51)) nil (23088 5721 782973 219000) 0 nil]) ((1360 . 1368) (#("users" 0 5 (fontified t)) . 1360)) nil (23088 5721 782977 294000) 0 nil]) ((1344 . 1357) (#("users" 0 5 (fontified t face font-lock-string-face)) . 1344) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -5) (undo-tree-id16 . -4) 1348) nil (23088 5721 782982 6000) 0 nil]) ((nil rear-nonsticky nil 1333 . 1334) (#("
" 0 1 (fontified nil)) . -1359) (1333 . 1360) 1308) nil (23088 5721 782984 640000) 0 nil]) ((399 . 400) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 399) (398 . 399) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 398) (397 . 398) (377 . 397) (#("./routes/fac" 0 12 (fontified t face font-lock-string-face)) . -377) (undo-tree-id17 . -12) 389 (377 . 389) (376 . 378) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -376) (376 . 377) (375 . 377) (#("(" 0 1 (fontified nil)) . -375) (372 . 376) (351 . 372) (350 . 351) (t 23088 5099 129700 106000) 312) nil (23088 5721 782989 818000) 0 nil]) nil nil (23088 5721 782991 796000) 0 nil] #18# 16794 111 nil]