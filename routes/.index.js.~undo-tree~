"b7b460133ce8160a0e865a6868f5cc08c6690f45"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#11=[nil nil ((#("const passport = require(\"passport\");
const FacebookStrategy = require(\"passport-facebook\").Strategy;
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 14 (fontified t face font-lock-variable-name-face) 14 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 35 (fontified t face font-lock-string-face) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 38 (fontified t) 38 43 (fontified t face font-lock-keyword-face) 43 44 (fontified t) 44 60 (fontified t face font-lock-variable-name-face) 60 70 (fontified t) 70 71 (fontified t face (rainbow-delimiters-depth-1-face)) 71 90 (fontified t face font-lock-string-face) 90 91 (fontified t face (rainbow-delimiters-depth-1-face)) 91 102 (fontified t)) . 66) (undo-tree-id132 . -102) (undo-tree-id133 . -102) (undo-tree-id134 . -102) (undo-tree-id135 . -102) (undo-tree-id136 . -102) (undo-tree-id137 . -102) (undo-tree-id138 . -102) (undo-tree-id139 . -102)) nil (23088 6809 601215 372000) 0 nil]) ((#("const facebook = require(\"../facebook_credentials.json\");
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 14 (fontified t face font-lock-variable-name-face) 14 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 55 (fontified t face font-lock-string-face) 55 56 (fontified t face (rainbow-delimiters-depth-1-face)) 56 58 (fontified t)) . 168) (undo-tree-id140 . -58) (undo-tree-id141 . -58) (undo-tree-id142 . -58) (undo-tree-id143 . -58) (undo-tree-id144 . -58) (undo-tree-id145 . -58) (undo-tree-id146 . -58) (undo-tree-id147 . -58)) nil (23088 6809 601229 85000) 0 nil]) ((#("const User = models.User;
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 10 (fontified t face font-lock-variable-name-face) 10 25 (fontified t) 25 26 (fontified t)) . 226) (undo-tree-id148 . -26) (undo-tree-id149 . -26) (undo-tree-id150 . -26)) nil (23088 6809 601232 781000) 0 nil]) ((#("const models = require(\"../models/\");
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 12 (fontified t face font-lock-variable-name-face) 12 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 35 (fontified t face font-lock-string-face) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 38 (fontified t)) . 226) (undo-tree-id151 . -38) (undo-tree-id152 . -38) (t 23088 6048 29562 314000)) nil (23088 6809 601235 550000) 0 nil]) ((355 . 383) (#("    console.log(req.session);
" 0 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-3-face)) 28 29 (fontified t) 29 30 (fontified t)) . 355) (undo-tree-id120 . -30) (undo-tree-id121 . -30) (undo-tree-id122 . 1) (undo-tree-id123 . 2) (undo-tree-id124 . 2) (undo-tree-id125 . -28) (undo-tree-id126 . -28) (undo-tree-id127 . -28) (undo-tree-id128 . -30)) nil (23088 6047 989429 979000) 0 nil]) ((383 . 384) (#(":" 0 1 (fontified t)) . -383) (undo-tree-id129 . -1) 384 (383 . 384) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 383) (380 . 383) (371 . 380) (370 . 372) (#("(" 0 1 (fontified nil)) . -370) (359 . 371) (#("r" 0 1 (fontified t)) . -359) (undo-tree-id130 . -1) (#("e" 0 1 (fontified t)) . -360) (undo-tree-id131 . -1) 361 (359 . 361) (355 . 359) (355 . 356) (t 23088 5751 27057 46000)) nil (23088 6047 989438 444000) 0 nil]) ((168 . 264) (#("const facebook = require('../facebook_credentials.json');
const models = require('../models/');
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 14 (fontified t face font-lock-variable-name-face) 14 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 55 (fontified t face font-lock-string-face) 55 56 (fontified t face (rainbow-delimiters-depth-1-face)) 56 58 (fontified t) 58 63 (fontified t face font-lock-keyword-face) 63 64 (fontified t) 64 70 (fontified t face font-lock-variable-name-face) 70 80 (fontified t) 80 81 (fontified t face (rainbow-delimiters-depth-1-face)) 81 93 (fontified t face font-lock-string-face) 93 94 (fontified t face (rainbow-delimiters-depth-1-face)) 94 96 (fontified t)) . 168) (undo-tree-id0 . -58) (undo-tree-id1 . -58) (undo-tree-id2 . -96) (undo-tree-id3 . -96) (undo-tree-id4 . -96)) nil (23088 5750 988680 545000) 0 nil]) ((289 . 290) 264) nil (23088 5750 988683 928000) 0 nil]) ((#("
passport.use(
  new FacebookStrategy(
    {
      clientID: facebook.appId,
      clientSecret: facebook.appSecret,
      callbackURL: \"http://localhost:3000/auth/facebook/callback\"
    },
    function(accessToken, refreshToken, profile, done) {
      const facebookId = profile.id;
      const displayName = profile.displayName;

      console.log(profile);
      User.findOne({ facebookId }, function(err, user) {
        if (err) return done(err);

        if (!user) {
          // Create a new account if one doesn't exist
          user = new User({ facebookId, displayName });
          user.save((err, user) => {
            if (err) return done(err);
            done(null, user);
          });
        } else {
          // Otherwise, return the extant user.
          done(null, user);
        }
      });
    }
  )
);

passport.serializeUser(function(user, done) {
  done(null, user.id);
});

passport.deserializeUser(function(id, done) {
  User.findById(id, function(err, user) {
    done(err, user);
  });
});

router.get(\"/auth/facebook\", passport.authenticate(\"facebook\"));

router.get(
  \"/auth/facebook/callback\",
  passport.authenticate(\"facebook\", {
    successRedirect: \"/\",
    failureRedirect: \"/login\"
  })
);

" 0 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 17 (fontified t) 17 20 (fontified t face font-lock-keyword-face) 20 21 (fontified t) 21 37 (fontified t face font-lock-type-face) 37 38 (fontified t face (rainbow-delimiters-depth-2-face)) 38 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-3-face)) 44 136 (fontified t) 136 182 (fontified t face font-lock-string-face) 182 187 (fontified t) 187 188 (fontified t face (rainbow-delimiters-depth-3-face)) 188 194 (fontified t) 194 202 (fontified t face font-lock-keyword-face) 202 203 (fontified t face (rainbow-delimiters-depth-3-face)) 203 211 (fontified t face font-lock-variable-name-face) 211 214 (fontified t face font-lock-variable-name-face) 214 216 (fontified t) 216 228 (fontified t face font-lock-variable-name-face) 228 230 (fontified t) 230 237 (fontified t face font-lock-variable-name-face) 237 239 (fontified t) 239 243 (fontified t face font-lock-variable-name-face) 243 244 (fontified t face (rainbow-delimiters-depth-3-face)) 244 245 (fontified t) 245 246 (fontified t js--pstate #1=((nil . #3=(2 function 484 t nil)) (nil . #5=(-2305843009213693952 toplevel nil nil nil))) face (rainbow-delimiters-depth-3-face)) 246 247 (fontified t) 247 253 (fontified t) 253 258 (fontified t face font-lock-keyword-face) 258 259 (fontified t) 259 269 (fontified t face font-lock-variable-name-face) 269 290 (fontified t) 290 295 (fontified t face font-lock-keyword-face) 295 296 (fontified t) 296 307 (fontified t face font-lock-variable-name-face) 307 349 (fontified t) 349 350 (fontified t face (rainbow-delimiters-depth-4-face)) 350 357 (fontified t) 357 358 (fontified t face (rainbow-delimiters-depth-4-face)) 358 378 (fontified t) 378 379 (fontified t face (rainbow-delimiters-depth-4-face)) 379 380 (fontified t face (rainbow-delimiters-depth-5-face)) 380 392 (fontified t) 392 393 (fontified t face (rainbow-delimiters-depth-5-face)) 393 395 (fontified t) 395 403 (fontified t face font-lock-keyword-face) 403 404 (fontified t face (rainbow-delimiters-depth-5-face)) 404 407 (fontified t face font-lock-variable-name-face) 407 409 (fontified t) 409 413 (fontified t face font-lock-variable-name-face) 413 414 (fontified t face (rainbow-delimiters-depth-5-face)) 414 415 (fontified t) 415 416 (fontified t js--pstate (#2=(nil 4 function 685 t nil) . #1#) face (rainbow-delimiters-depth-5-face)) 416 425 (fontified t) 425 427 (fontified t face font-lock-keyword-face) 427 428 (fontified t) 428 429 (fontified t face (rainbow-delimiters-depth-6-face)) 429 432 (fontified t) 432 433 (fontified t face (rainbow-delimiters-depth-6-face)) 433 434 (fontified t) 434 440 (fontified t face font-lock-keyword-face) 440 445 (fontified t) 445 446 (fontified t face (rainbow-delimiters-depth-6-face)) 446 449 (fontified t) 449 450 (fontified t face (rainbow-delimiters-depth-6-face)) 450 461 (fontified t) 461 463 (fontified t face font-lock-keyword-face) 463 464 (fontified t) 464 465 (fontified t face (rainbow-delimiters-depth-6-face)) 465 470 (fontified t) 470 471 (fontified t face (rainbow-delimiters-depth-6-face)) 471 472 (fontified t) 472 473 (fontified t face (rainbow-delimiters-depth-6-face)) 473 484 (fontified t) 484 487 (fontified t face font-lock-comment-delimiter-face) 487 529 (fontified t face font-lock-comment-face) 529 546 (fontified t) 546 549 (fontified t face font-lock-keyword-face) 549 550 (fontified t) 550 554 (fontified t face font-lock-type-face) 554 555 (fontified t face (rainbow-delimiters-depth-7-face)) 555 556 (fontified t face (rainbow-delimiters-depth-8-face)) 556 581 (fontified t) 581 582 (fontified t face (rainbow-delimiters-depth-8-face)) 582 583 (fontified t face (rainbow-delimiters-depth-7-face)) 583 604 (fontified t) 604 605 (fontified t face (rainbow-delimiters-depth-7-face)) 605 606 (fontified t face (rainbow-delimiters-depth-8-face)) 606 615 (fontified t) 615 616 (fontified t face (rainbow-delimiters-depth-8-face)) 616 620 (fontified t) 620 621 (fontified t face (rainbow-delimiters-depth-8-face)) 621 634 (fontified t) 634 636 (fontified t face font-lock-keyword-face) 636 637 (fontified t) 637 638 (fontified t face (rainbow-delimiters-depth-9-face)) 638 641 (fontified t) 641 642 (fontified t face (rainbow-delimiters-depth-9-face)) 642 643 (fontified t) 643 649 (fontified t face font-lock-keyword-face) 649 654 (fontified t) 654 655 (fontified t face (rainbow-delimiters-depth-9-face)) 655 658 (fontified t) 658 659 (fontified t face (rainbow-delimiters-depth-9-face)) 659 677 (fontified t) 677 678 (fontified t face (rainbow-delimiters-depth-9-face)) 678 682 (fontified t face font-lock-constant-face) 682 688 (fontified t) 688 689 (fontified t face (rainbow-delimiters-depth-9-face)) 689 701 (fontified t) 701 702 (fontified t face (rainbow-delimiters-depth-8-face)) 702 703 (fontified t face (rainbow-delimiters-depth-7-face)) 703 713 (fontified t) 713 714 (fontified t face (rainbow-delimiters-depth-6-face)) 714 715 (fontified t) 715 719 (fontified t face font-lock-keyword-face) 719 720 (fontified t) 720 721 (fontified t face (rainbow-delimiters-depth-6-face)) 721 732 (fontified t) 732 735 (fontified t face font-lock-comment-delimiter-face) 735 747 (fontified t face font-lock-comment-face) 747 770 (fontified t face font-lock-comment-face) 770 784 (fontified t) 784 785 (fontified t face (rainbow-delimiters-depth-7-face)) 785 789 (fontified t face font-lock-constant-face) 789 795 (fontified t) 795 796 (fontified t face (rainbow-delimiters-depth-7-face)) 796 806 (fontified t) 806 807 (fontified t face (rainbow-delimiters-depth-6-face)) 807 814 (fontified t) 814 815 (fontified t js--pend #2# face (rainbow-delimiters-depth-5-face)) 815 816 (fontified t face (rainbow-delimiters-depth-4-face)) 816 822 (fontified t) 822 823 (fontified t js--pend #4=((#2#) . #3#) face (rainbow-delimiters-depth-3-face)) 823 826 (fontified t) 826 827 (fontified t face (rainbow-delimiters-depth-2-face)) 827 828 (fontified t) 828 829 (fontified t face (rainbow-delimiters-depth-1-face)) 829 831 (fontified t) 831 854 (fontified t) 854 855 (fontified t face (rainbow-delimiters-depth-1-face)) 855 863 (fontified t face font-lock-keyword-face) 863 864 (fontified t face (rainbow-delimiters-depth-2-face)) 864 868 (fontified t face font-lock-variable-name-face) 868 870 (fontified t) 870 874 (fontified t face font-lock-variable-name-face) 874 875 (fontified t face (rainbow-delimiters-depth-2-face)) 875 876 (fontified t) 876 877 (fontified t js--pstate (#6=(nil 1 function 1145 t nil) (#7=(#4#) . #5#)) face (rainbow-delimiters-depth-2-face)) 877 884 (fontified t) 884 885 (fontified t face (rainbow-delimiters-depth-3-face)) 885 889 (fontified t face font-lock-constant-face) 889 898 (fontified t) 898 899 (fontified t face (rainbow-delimiters-depth-3-face)) 899 901 (fontified t) 901 902 (fontified t js--pend #6# face (rainbow-delimiters-depth-2-face)) 902 903 (fontified t face (rainbow-delimiters-depth-1-face)) 903 930 (fontified t) 930 931 (fontified t face (rainbow-delimiters-depth-1-face)) 931 939 (fontified t face font-lock-keyword-face) 939 940 (fontified t face (rainbow-delimiters-depth-2-face)) 940 942 (fontified t face font-lock-variable-name-face) 942 944 (fontified t) 944 948 (fontified t face font-lock-variable-name-face) 948 949 (fontified t face (rainbow-delimiters-depth-2-face)) 949 950 (fontified t) 950 951 (fontified t js--pstate #8=((nil . #10=(1 function 1221 t nil)) ((#6# . #7#) . #5#)) face (rainbow-delimiters-depth-2-face)) 951 967 (fontified t) 967 968 (fontified t face (rainbow-delimiters-depth-3-face)) 968 972 (fontified t) 972 980 (fontified t face font-lock-keyword-face) 980 981 (fontified t face (rainbow-delimiters-depth-4-face)) 981 984 (fontified t face font-lock-variable-name-face) 984 986 (fontified t) 986 990 (fontified t face font-lock-variable-name-face) 990 991 (fontified t face (rainbow-delimiters-depth-4-face)) 991 992 (fontified t) 992 993 (fontified t js--pstate (#9=(nil 3 function 1262 t nil) . #8#) face (rainbow-delimiters-depth-4-face)) 993 1002 (fontified t) 1002 1003 (fontified t face (rainbow-delimiters-depth-5-face)) 1003 1012 (fontified t) 1012 1013 (fontified t face (rainbow-delimiters-depth-5-face)) 1013 1017 (fontified t) 1017 1018 (fontified t js--pend #9# face (rainbow-delimiters-depth-4-face)) 1018 1019 (fontified t face (rainbow-delimiters-depth-3-face)) 1019 1021 (fontified t) 1021 1022 (fontified t js--pend ((#9#) . #10#) face (rainbow-delimiters-depth-2-face)) 1022 1023 (fontified t face (rainbow-delimiters-depth-1-face)) 1023 1036 (fontified t) 1036 1037 (fontified t face (rainbow-delimiters-depth-1-face)) 1037 1053 (fontified t face font-lock-string-face) 1053 1076 (fontified t) 1076 1077 (fontified t face (rainbow-delimiters-depth-2-face)) 1077 1087 (fontified t face font-lock-string-face) 1087 1088 (fontified t face (rainbow-delimiters-depth-2-face)) 1088 1089 (fontified t face (rainbow-delimiters-depth-1-face)) 1089 1102 (fontified t) 1102 1103 (fontified t face (rainbow-delimiters-depth-1-face)) 1103 1106 (fontified t) 1106 1131 (fontified t face font-lock-string-face) 1131 1156 (fontified t) 1156 1157 (fontified t face (rainbow-delimiters-depth-2-face)) 1157 1167 (fontified t face font-lock-string-face) 1167 1169 (fontified t) 1169 1170 (fontified t face (rainbow-delimiters-depth-3-face)) 1170 1192 (fontified t) 1192 1195 (fontified t face font-lock-string-face) 1195 1218 (fontified t) 1218 1226 (fontified t face font-lock-string-face) 1226 1229 (fontified t) 1229 1230 (fontified t face (rainbow-delimiters-depth-3-face)) 1230 1231 (fontified t face (rainbow-delimiters-depth-2-face)) 1231 1232 (fontified t) 1232 1233 (fontified t face (rainbow-delimiters-depth-1-face)) 1233 1236 (fontified t)) . 290) (undo-tree-id5 . -622) (undo-tree-id6 . -622) (undo-tree-id7 . -585) (undo-tree-id8 . -585) (undo-tree-id9 . -1025) (undo-tree-id10 . -1025) (undo-tree-id11 . -1232) (undo-tree-id12 . -1232) (undo-tree-id13 . -1227) (undo-tree-id14 . -1227) (undo-tree-id15 . -1197) (undo-tree-id16 . -1197) (undo-tree-id17 . -1171) (undo-tree-id18 . -1171) (undo-tree-id19 . -1026) (undo-tree-id20 . -1026) (undo-tree-id21 . -661) (undo-tree-id22 . -661) (undo-tree-id23 . -691) (undo-tree-id24 . -691) (undo-tree-id25 . -705) (undo-tree-id26 . -705) (undo-tree-id27 . -722) (undo-tree-id28 . -722) (undo-tree-id29 . -770) (undo-tree-id30 . -770) (undo-tree-id31 . -1021) (undo-tree-id32 . -1021) (undo-tree-id33 . -529) (undo-tree-id34 . -529) (undo-tree-id35 . -831) (undo-tree-id36 . -831) (undo-tree-id37 . -828) (undo-tree-id38 . -828) (undo-tree-id39 . -824) (undo-tree-id40 . -824) (undo-tree-id41 . -818) (undo-tree-id42 . -818) (undo-tree-id43 . -808) (undo-tree-id44 . -808) (undo-tree-id45 . -798) (undo-tree-id46 . -798) (undo-tree-id47 . -1235) (undo-tree-id48 . -331) (undo-tree-id49 . -452) (undo-tree-id50 . -831) (undo-tree-id51 . -905) (undo-tree-id52 . -1025) (undo-tree-id53 . -1091) (undo-tree-id54 . -1235) (undo-tree-id55 . -1235) (undo-tree-id56 . -1091) (undo-tree-id57 . -1025) (undo-tree-id58 . -1235) (undo-tree-id59 . -1235) (undo-tree-id60 . -1236) (undo-tree-id61 . -1236) (undo-tree-id62 . -905) (undo-tree-id63 . -831) (undo-tree-id64 . -452) (undo-tree-id65 . -1224) (undo-tree-id66 . -1224) (undo-tree-id67 . -1233) (undo-tree-id68 . -901) (undo-tree-id69 . -1233) (undo-tree-id70 . -1233) (undo-tree-id71 . -1131) (undo-tree-id72 . -1131) (undo-tree-id73 . -1091) (undo-tree-id74 . -1091) (undo-tree-id75 . -1025) (undo-tree-id76 . -1025) (undo-tree-id77 . -905) (undo-tree-id78 . -832) (undo-tree-id79 . -832) (undo-tree-id80 . -878) (undo-tree-id81 . -878) (undo-tree-id82 . -901) (undo-tree-id83 . -901) (undo-tree-id84 . -905) (undo-tree-id85 . -905) (undo-tree-id86 . -1091) (undo-tree-id87 . -1091) (undo-tree-id88 . -1092) (undo-tree-id89 . -1092) (undo-tree-id90 . -1104) (undo-tree-id91 . -1104) (undo-tree-id92 . -1133) (undo-tree-id93 . -1133) (undo-tree-id94 . -905) (undo-tree-id95 . -831) (undo-tree-id96 . -831) (undo-tree-id97 . -452) (undo-tree-id98 . -452) (undo-tree-id99 . -331) (undo-tree-id100 . -331) (undo-tree-id101 . -906) (undo-tree-id102 . -906) (undo-tree-id103 . -952) (undo-tree-id104 . -952) (undo-tree-id105 . -994) (undo-tree-id106 . -994) (undo-tree-id107 . -1015) (undo-tree-id108 . -1015) (undo-tree-id109 . -529) (undo-tree-id110 . -1235) (undo-tree-id111 . -1235) (undo-tree-id112 . -1236) (undo-tree-id113 . -1235) (undo-tree-id114 . -331) (undo-tree-id115 . -452) (undo-tree-id116 . -831) (undo-tree-id117 . -905) (undo-tree-id118 . -1025) (undo-tree-id119 . -1091) 1525 (t 23088 5099 133033 390000)) nil (23088 5750 988761 441000) 0 nil]) nil nil (23088 5750 988767 225000) 0 nil] #11# 3063 9 nil]